apiVersion: template.openshift.io/v1 
kind: Template
metadata:
  name: trigger-rbac-template 
  annotations:
    description: "Create service account and give it the appropriate trigger roles"
objects:
- apiVersion: v1
  kind: ServiceAccount 
  metadata: 
    name: ${SERVICE_ACCOUNT_NAME} 
  secrets:
    -name: gitlab-secret 
- apiVersion: rbac.authorization.k8s.io/v1 
  kind: ClusterRole 
  metadata: 
    name: ${SERVICE_ACCOUNT_NAME}-interceptor-clusterrole 
  rules: 
  - apiGroups: ["triggers.tekton.dev"]
    resources: ["clusterinterceptors"]
    verbs: ["get", "list", "watch"]
- apiVersion: rbac.authorization.k8s.io/v1 
  kind: ClusterRoleBinding 
  metadata: 
    name: ${SERVICE_ACCOUNT_NAME}-interceptor-binding 
  subjects:
  - kind: ServiceAccount 
    name: ${SERVICE_ACCOUNT_NAME}
    namespace: ${NAMESPACE} 
  roleRef: 
    apiGroup: rbac.authorization.k8s.io 
    kind: ClusterRole 
    name: ${SERVICE_ACCOUNT_NAME}-}-interceptor-clusterrole
- apiVersion: rbac.authorization.k8s.io/v1 
  kind: RoleBinding 
  metadata: 
    name: ${SERVICE_ACCOUNT_NAME}-eventlistener-binding 
  subjects:
  - kind: ServiceAccount 
    name: ${SERVICE_ACCOUNT_NAME}
  roleRef: 
    apiGroup: rbac.authorization.k8s.io 
    kind: ClusterRole 
    name: tekton-triggers-eventlistener-roles
- apiVersion: rbac.authorization.k8s.io/v1 
  kind: ClusterRoleBinding 
  metadata: 
    name: ${SERVICE_ACCOUNT_NAME}-eventlistener-clusterbinding 
  subjects:
  - kind: ServiceAccount 
    name: ${SERVICE_ACCOUNT_NAME}
    namespace: ${NAMESPACE} 
  roleRef: 
    apiGroup: rbac.authorization.k8s.io 
    kind: ClusterRole 
    name: tekton-triggers-eventlistener-clusterroles
- apiVersion: rbac.authorization.k8s.io/v1 
  kind: ClusterRoleBinding 
  metadata: 
    name: ${SERVICE_ACCOUNT_NAME}-self-provisioner-clusterbinding  
  subjects:
  - kind: ServiceAccount 
    name: ${SERVICE_ACCOUNT_NAME}
    namespace: ${NAMESPACE} 
  roleRef: 
    apiGroup: rbac.authorization.k8s.io 
    kind: ClusterRole 
    name: self-provisioner 
- apiVersion: rbac.authorization.k8s.io/v1 
  kind: ClusterRoleBinding 
  metadata: 
    name: ${SERVICE_ACCOUNT_NAME}-storage-admin-clusterbinding 
  subjects:
  - kind: ServiceAccount 
    name: ${SERVICE_ACCOUNT_NAME}
    namespace: ${NAMESPACE} 
  roleRef: 
    apiGroup: rbac.authorization.k8s.io 
    kind: ClusterRole 
    name: storage-admin 
- apiVersion: rbac.authorization.k8s.io/v1 
  kind: ClusterRoleBinding 
  metadata: 
    name: ${SERVICE_ACCOUNT_NAME}-admin-clusterbinding 
  subjects:
  - kind: ServiceAccount 
    name: ${SERVICE_ACCOUNT_NAME}
    namespace: ${NAMESPACE} 
  roleRef: 
    apiGroup: rbac.authorization.k8s.io 
    kind: ClusterRole 
    name: admin

           
